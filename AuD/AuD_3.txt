Übung 3.1

power(x, p) = if p = 0 then 1 else x*power(x, p-1)

Übung 3.2

search_sequentially(array, x) = if len(array) = 0 then -1
                   else compare_index_sequentially(array, x, 0)

compare_index_sequentially(array, x, index) =
                        if array[index] = x then index
                        else
                            if len(array) > index + 1 then compare_index_sequentially(array, x, index + 1)
                            else -1
                            endif
                        endif

Übung 3.3

search_binary(array, x) = compare_index_binary(array, x, 0)

compare_index_binary(array, x, starting_index) =
                if len(array) = 0 then -1
                else
                    if array[int(len(array)/2)] = x then int(len(array)/2) + starting_index
                    else
                        if len(array) = 1 then -1
                        else
                            if array[int(len(array)/2)] > x then compare_index_binary(array[:int(len(array)/2)], x, starting_index)
                            else array[int(len(array)/2):], x, starting_index + int(len(array)/2))
                            endif
                        endif
                    endif
                endif